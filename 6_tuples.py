# ----------------------------------------------------------------------------------------
# Tuples are immutable - cannot change
	# Mutable objects within a tuple are mutable
# Tuples are faster than lists
# ----------------------------------------------------------------------------------------
a = (1, 2, {"name": "Chetan"}, "hello", [1,2])
print a			# (1, 2, {'name': 'Chetan'}, 'hello', [1,2])
print a[0]		# 1
print a[-1]		# hello
print a[-1][0]		# 1

b = (5)
print type(b)		# int
b = (5,)
print type(b)		# tuple # use a , operator if there is just one element in the tuple

# ----------------------------------------------------------------------------------------
# Mutable objects within a tuple are mutable
a[-1][1] = 9
print a			# (1, 2, {'name': 'Chetan'}, 'hello', [1,9])
# ----------------------------------------------------------------------------------------

# ----------------------------------------------------------------------------------------
# Iterating a tuple
# ----------------------------------------------------------------------------------------
for i in a:
    print i		# (1, 2, {'name': 'Chetan'}, 'hello', [1,9])

'''
['__add__', '__class__', '__contains__', '__delattr__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__getnewargs__', '__getslice__', '__gt__', '__hash__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__rmul__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', 'count', 'index']

'''

# ----------------------------------------------------------------------------------------
# Concantenate tuples
# ----------------------------------------------------------------------------------------

a = (1,2,3)
b = (4,5,6)
print a + b			# 1,2,3,4,5,6
print type(a + b)		# tuple

# ----------------------------------------------------------------------------------------
# Count
# ----------------------------------------------------------------------------------------
print a.count(2)	# 1 # Number of times an object is repeated

# ----------------------------------------------------------------------------------------
# Index
# ----------------------------------------------------------------------------------------
print a.index(1)	# 0
